;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Clojure LSP user level (global) configuration
;; https://clojure-lsp.io/settings/
;;
;; Complete config.edn example with default settings
;; https://github.com/clojure-lsp/clojure-lsp/blob/master/docs/all-available-settings.edn
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


{

 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; Project analysis

 ;; auto-resolved for deps.edn, project.clj or bb.edn projects
 :source-paths   #{"src" "test"}

 ;; Include :extra-paths and :extra-deps from project &user level aliases in LSP classpath
 :source-aliases #{:dev :test :env/dev :env/test :lib/reloaded}

 ;; Define a custom project classpath command, e.g. Clojure CLI
 ;; :project-specs [{:project-path "deps.edn"
 ;;                  :classpath-cmd ["clojure" "-M:env/dev:env/test" "-Spath"]}]
 :project-specs  []

 ;; Additional LSP configurations to load from classpath
 ;; https://clojure-lsp.io/settings/#classpath-config-paths
 :classpath-config-paths []

 ;; Ignore Clojure files within the specified directories
 ;; - i.e ignore build artefacts placed in target or resources directories
 :ignore-classpath-directories     false

 ;; Watch for classpath changes
 :notify-references-on-file-change true
 :compute-external-file-changes    true

 ;; Java Sources from Ubuntu package openjdk-17-source
 :java
 {:jdk-source-uri       "file:///usr/lib/jvm/openjdk-17/lib/src.zip" ;;
  :home-path            nil ;; jdk-source-uri takes precedence
  :download-jdk-source? false}

 ;; End of Project analysis
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


 ;; Lint / Refactor code
 :lint-project-files-after-startup? true
 :linters {:clj-kondo {:level :on
                       :report-duplicates true
                       :ns-exclude-regex ""}}
 :clean {:automatically-after-ns-refactor true
         :ns-inner-blocks-indentation :next-line
         :ns-import-classes-indentation :next-line
         :sort {:ns true
                :require true
                :import true
                :import-classes {:classes-per-line 3} ;; -1 for all in single line
                :refer {:max-line-length 80}}}
 :hover {:hide-file-location? false
         :arity-on-same-line? false
         :clojuredocs true}

 :code-lens {:segregate-test-references true}
 :semantic-tokens? true
 :use-metadata-for-privacy? false
 :auto-add-ns-to-new-files? true
 :keep-parens-when-threading? false
 :document-formatting? true
 :document-range-formatting? true
 :dependency-scheme :zip
 :text-document-sync-kind :full
 :cljfmt-config-path ".cljfmt.edn"
 :cljfmt {}
 :stubs {:generation {:namespaces #{}
                      :output-dir ".lsp/.cache/stubs"
                      :java-command "java"}
         :extra-dirs []}
 :additional-snippets []
 :api {:exit-on-errors? true}
 :show-docs-arity-on-same-line? false ; deprecated, will be removed soon, use :hover :arity-on-same-line?
 :lens-segregate-test-references true ; deprecated, will be removed soon, use :code-lens :segregate-test-references instead.
 :copy-kondo-configs? true
 :cache-path ".lsp/.cache"
 :log-path "/tmp/clojure-lsp.*.out"}
